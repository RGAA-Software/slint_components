import { Theme } from "ui_theme.slint";

export component UIBubbleChart inherits Rectangle {
    
    in property <int> percent: 30;
    in property <bool> show-indicator: false;
    in property <brush> bg-color: Theme.palette.divider-shot-color;
    in property <brush> fill-color: Theme.palette.main-color;
    in property <bool> show-bubble: true;
    in property <string> title: "Default title";

    width: 200px;
    height: 200px;
    background: bg-color;
    clip: true;
    border-color: fill-color.with-alpha(0.3);
    border-width: 6px;
    border-radius: self.width/2;

    Rectangle {
        width: parent.width;
        height: parent.height;
        border-radius: self.width/2;

        Path {
            width: parent.width;
            height: parent.height;
            viewbox-width: parent.width/1px;
            viewbox-height: parent.height/1px;

            fill: fill-color;

            MoveTo {
                x: 0;
                y: parent.viewbox-height;
            }

            LineTo {
                x: parent.viewbox-width;
                y: parent.viewbox-height;
            }

            LineTo {
                x: parent.viewbox-width;
                y: parent.viewbox-height - parent.viewbox-height * percent / 100;
            }

            CubicTo {
                x: 0;
                y: parent.viewbox-height - parent.viewbox-height * percent / 100;
                control-1-x: parent.viewbox-width * 2.3/4;
                control-1-y: parent.viewbox-height - parent.viewbox-height * (percent + 10 * (sin(360deg * animation-tick()/5000/1ms))) / 100;
                control-2-x: parent.viewbox-width * 0.4/4;
                control-2-y: parent.viewbox-height - parent.viewbox-height * (percent - 10 * (cos(360deg * animation-tick()/3000/1ms))) / 100;
            }
        }

        Rectangle {
            visible: show-indicator ? true : false;
            width: 6px;
            height: 6px;
            x: parent.width * 3/4;
            y: parent.height - parent.height * (percent + 10 * (sin(360deg * animation-tick()/6000/1ms))) / 100;
            background: Theme.palette.main-color;
            border-radius: self.width/2;
        }

        Rectangle {
            visible: show-indicator ? true : false;
            width: 6px;
            height: 6px;
            x: parent.width * 1/4;
            y: parent.height - parent.height * (percent - 23 * (cos(360deg * animation-tick()/6000/1ms))) / 100;
            background: Theme.palette.main-color;
            border-radius: self.width/2;
        }

        init => {

        }

        // bubble
        Rectangle {
            visible: show-bubble ? true : false;
            width: 7px * (1 - abs(cos(360deg * animation-tick()/4000/1ms)));
            height: 7px * (1 - abs(cos(360deg * animation-tick()/4000/1ms)));
            x: parent.width * 1/4;
            y: parent.height - parent.height * (percent - 27 * (cos(360deg * animation-tick()/3000/1ms))) / 100;
            background: fill-color.with-alpha(1 - abs(cos(360deg * animation-tick()/3000/1ms)));
            border-radius: self.width/2;
        }
        Rectangle {
            visible: show-bubble ? true : false;
            width: 6px * (1 - abs(cos(360deg * animation-tick()/2000/1ms)));
            height: 6px * (1 - abs(cos(360deg * animation-tick()/2000/1ms)));
            x: parent.width * 2/4;
            y: parent.height - parent.height * (percent - 9 * (cos(360deg * animation-tick()/2000/1ms))) / 100;
            background: fill-color.with-alpha(1 - abs(cos(360deg * animation-tick()/2000/1ms)));
            border-radius: self.width/2;
        }
        Rectangle {
            visible: show-bubble ? true : false;
            width: 4px * (1 - abs(cos(360deg * animation-tick()/3700/1ms)));
            height: 4px * (1 - abs(cos(360deg * animation-tick()/3700/1ms)));
            x: parent.width * 3/4;
            y: parent.height - parent.height * (percent - 14 * (cos(360deg * animation-tick()/3700/1ms))) / 100;
            background: fill-color.with-alpha(1 - abs(cos(360deg * animation-tick()/3700/1ms)));
            border-radius: self.width/2;
        }
        Rectangle {
            visible: show-bubble ? true : false;
            width: 5px * (1 - abs(cos(360deg * animation-tick()/5000/1ms)));
            height: 5px * (1 - abs(cos(360deg * animation-tick()/5000/1ms)));
            x: parent.width * 1.3/4;
            y: parent.height - parent.height * (percent - 10 * (cos(360deg * animation-tick()/5000/1ms))) / 100;
            background: fill-color.with-alpha(1 - abs(cos(360deg * animation-tick()/5000/1ms)));
            border-radius: self.width/2;
        }
    }

    Text {
        text: percent + "%";
        font-size: 32px;
        font-weight: 700;
    }

    Rectangle {
        Text {
            y: parent.y + root.height / 5;
            text: title;
            font-size: Theme.palette.font-size-normal-title;
        }
    }
    
}